# dataset config
gpu_id: 0
state: INFO
field_separator: "\t"             # (str) Separator of different columns in atomic files.
source_domain:
  # dataset: amazon-books-overlap         # (str) Name of the dataset, refer to https://recbole.io/dataset_list.html, the dataset with name(case-sensitive) in the list will be downloaded automatically.
  # data_path: 'dataset/Amazon_Books'
  dataset: amazon-movies-tv   # (str) Name of the dataset, much smaller than amazon-books use this one if runing on your local machine
  data_path: 'dataset/amazon-movies-tv'

  # Basic Information
  seq_separator: " "              # (str) Separator inside the sequence features.
  USER_ID_FIELD: user_id          # (str) Field name of user ID feature.
  ITEM_ID_FIELD: item_id          # (str) Field name of item ID feature.
  RATING_FIELD: rating            # (str) Field name of rating feature.
  TIME_FIELD: timestamp           # (str) Field name of timestamp feature.
  NEG_PREFIX: neg_                # (str) Negative sampling prefix for pair-wise dataLoaders.
  LABEL_FIELD: label              # (str) Expected field name of the generated labels for point-wise dataLoaders. 
  threshold:                      # (dict) 0/1 labels will be generated according to the pairs.
    rating: 3
  numerical_features: []          # (list) Float feature fields to be embedded

  # Selectively Loading
  load_col:                       # (dict) The suffix of atomic files: (list) field names to be loaded.
    inter: [user_id, item_id, rating]
  # Filtering
  user_inter_num_interval: "[5,inf)"  # (str) User interval for filtering inter, such as [A,B] / [A,B) / (A,B) / (A,B].
  item_inter_num_interval: "[5,inf)"  # (str) Item interval for filtering inter, such as [A,B] / [A,B) / (A,B) / (A,B].
  val_interval: ~                  # (dict) Filter inter by values in {value field (str): interval (str)}.

target_domain:
  dataset: amazon-video-games   # (str) Name of the dataset, refer to https://recbole.io/dataset_list.html, the dataset with name(case-sensitive) in the list will be downloaded automatically.
  data_path: 'dataset/amazon-video-games'
  # Basic Information
  seq_separator: " "              # (str) Separator inside the sequence features.
  USER_ID_FIELD: user_id          # (str) Field name of user ID feature.
  ITEM_ID_FIELD: item_id          # (str) Field name of item ID feature.
  RATING_FIELD: rating            # (str) Field name of rating feature.
  TIME_FIELD: timestamp           # (str) Field name of timestamp feature.
  NEG_PREFIX: neg_                # (str) Negative sampling prefix for pair-wise dataLoaders.
  LABEL_FIELD: label              # (str) Expected field name of the generated labels for point-wise dataLoaders. 
  threshold:                      # (dict) 0/1 labels will be generated according to the pairs.
    rating: 3
  numerical_features: []          # (list) Float feature fields to be embedded
  # Selectively Loading
  load_col:                       # (dict) The suffix of atomic files: (list) field names to be loaded.
    inter: [user_id, item_id, rating]
  # Filtering
  user_inter_num_interval: "[5,inf)"  # (str) User interval for filtering inter, such as [A,B] / [A,B) / (A,B) / (A,B].
  item_inter_num_interval: "[5,inf)"  # (str) Item interval for filtering inter, such as [A,B] / [A,B) / (A,B) / (A,B].
  val_interval: ~                  # (dict) Filter inter by values in {value field (str): interval (str)}.